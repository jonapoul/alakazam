$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:com.jonapoul.alakazam.core////PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/index.html
$dokka.location:com.jonapoul.alakazam.core//capitalized/kotlin.String#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/capitalized.html
$dokka.location:com.jonapoul.alakazam.core//deepCopy/kotlin.collections.List[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/deep-copy.html
$dokka.location:com.jonapoul.alakazam.core//deepCopy/kotlin.collections.Map[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/deep-copy.html
$dokka.location:com.jonapoul.alakazam.core//exhaustive/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/exhaustive.html
$dokka.location:com.jonapoul.alakazam.core//ifEquals/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])?#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-equals.html
$dokka.location:com.jonapoul.alakazam.core//ifFalse/TypeParam(bounds=[kotlin.Any?])#kotlin.Boolean#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-false.html
$dokka.location:com.jonapoul.alakazam.core//ifIsInstance/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-is-instance.html
$dokka.location:com.jonapoul.alakazam.core//ifNotEquals/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])?#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-not-equals.html
$dokka.location:com.jonapoul.alakazam.core//ifNotNull/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-not-null.html
$dokka.location:com.jonapoul.alakazam.core//ifNull/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-null.html
$dokka.location:com.jonapoul.alakazam.core//ifTrue/TypeParam(bounds=[kotlin.Any?])#kotlin.Boolean#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/if-true.html
$dokka.location:com.jonapoul.alakazam.core//justTry/#kotlin.Function0[kotlin.Unit]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/just-try.html
$dokka.location:com.jonapoul.alakazam.core//noOp/#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/no-op.html
$dokka.location:com.jonapoul.alakazam.core//parseBoolean/kotlin.String#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/parse-boolean.html
$dokka.location:com.jonapoul.alakazam.core//quietlyClose/java.io.Closeable#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/quietly-close.html
$dokka.location:com.jonapoul.alakazam.core//replaceAllWith/kotlin.collections.MutableList[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.List[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/replace-all-with.html
$dokka.location:com.jonapoul.alakazam.core//replaceAllWith/kotlin.collections.MutableMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Map[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/replace-all-with.html
$dokka.location:com.jonapoul.alakazam.core//requireMessage/kotlin.Throwable#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/require-message.html
$dokka.location:com.jonapoul.alakazam.core//throwsAnyException/#kotlin.Function0[kotlin.Unit]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/throws-any-exception.html
$dokka.location:com.jonapoul.alakazam.core//throwsAnyThrowable/#kotlin.Function0[kotlin.Unit]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/throws-any-throwable.html
$dokka.location:com.jonapoul.alakazam.core//throwsSpecific/#kotlin.Function0[kotlin.Unit]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/throws-specific.html
$dokka.location:com.jonapoul.alakazam.core//toHexString/kotlin.ByteArray#kotlin.String/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/to-hex-string.html
$dokka.location:com.jonapoul.alakazam.core//toMacAddress/kotlin.ByteArray#kotlin.String/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/to-mac-address.html
$dokka.location:com.jonapoul.alakazam.core/Enums///PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-enums/index.html
$dokka.location:com.jonapoul.alakazam.core/Enums/first/#kotlin.Function1[TypeParam(bounds=[kotlin.Enum[^]]),kotlin.Boolean]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-enums/first.html
$dokka.location:com.jonapoul.alakazam.core/Enums/firstFromString/#kotlin.String/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-enums/first-from-string.html
$dokka.location:com.jonapoul.alakazam.core/Enums/firstOrNull/#kotlin.Function1[TypeParam(bounds=[kotlin.Enum[^]]),kotlin.Boolean]/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-enums/first-or-null.html
$dokka.location:com.jonapoul.alakazam.core/Enums/firstOrNullFromString/#kotlin.String/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-enums/first-or-null-from-string.html
$dokka.location:com.jonapoul.alakazam.core/Generator///PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-generator/index.html
$dokka.location:com.jonapoul.alakazam.core/Generator/Generator/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-generator/-generator.html
$dokka.location:com.jonapoul.alakazam.core/Generator/next/#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-generator/next.html
$dokka.location:com.jonapoul.alakazam.core/IntGenerator///PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-int-generator/index.html
$dokka.location:com.jonapoul.alakazam.core/IntGenerator/next/#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-int-generator/next.html
$dokka.location:com.jonapoul.alakazam.core/LongGenerator///PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-long-generator/index.html
$dokka.location:com.jonapoul.alakazam.core/LongGenerator/next/#/PointingToDeclaration/kotlin-core/com.jonapoul.alakazam.core/-long-generator/next.html
com.jonapoul.alakazam.core

