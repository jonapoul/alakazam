on:
  push:
    tags:
      - '**'

  workflow_dispatch:

env:
  CI: true

jobs:
  verify-version:
    runs-on: ubuntu-latest

    outputs:
      git-tag: ${{ steps.git-tag.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0 # get everything

      - name: Get Git tag
        id: git-tag
        run: |
          GIT_TAG=$(git describe --tags --abbrev=0)
          echo "GIT_TAG=$GIT_TAG"
          echo "version=$GIT_TAG" >> $GITHUB_OUTPUT

      - name: Get Git tag
        id: gradle-version
        run: |
          GRADLE_VERSION=$(cat gradle.properties | grep VERSION_NAME | cut -d "=" -f 2)
          echo "GRADLE_VERSION=$GRADLE_VERSION"
          echo "version=$GRADLE_VERSION" >> $GITHUB_OUTPUT

      - name: Verify Git tag matches Gradle version
        run: |
          GRADLE_VERSION="${{ steps.gradle-version.outputs.version }}"
          GIT_TAG="${{ steps.git-tag.outputs.version }}"
          if [ -z "$GRADLE_VERSION" ]; then
            echo "Empty gradle version"
            exit 1
          elif [ -z "$GIT_TAG" ]; then
            echo "Empty git tag"
            exit 1
          elif [ "$GRADLE_VERSION" != "$GIT_TAG" ]; then
            echo "Gradle version = $GRADLE_VERSION, Git tag = $GIT_TAG => MISMATCH!"
            exit 1
          fi

  publish:
    runs-on: macos-latest
    needs: verify-version

    steps:
      - name: Verify Git Tag
        run: |
          GIT_TAG="${{ needs.verify-version.outputs.git-tag }}"
          if [ -z "$GIT_TAG" ]; then
            echo "Empty tag?"
            exit 1
          fi
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "zulu"

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: Assemble
        run: ./gradlew assemble

      - name: Generate Javadoc
        run: ./gradlew dokkaJavadoc

      - name: Publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_IN_MEMORY_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_KEY_PASSWORD }}
        run: ./gradlew publish

      - name: Get tag
        run: echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          name: v${{ env.GIT_TAG }}
