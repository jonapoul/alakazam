name: CI

on:
  # Run on every commit in a PR, in any branch
  pull_request:
    branches:

  workflow_dispatch:

  # Run when a commit has been made on the primary branch, which should be after a PR
  push:
    branches: [ "master" ]

env:
  CI: true
  JAVA_VERSION: 17
  JDK_DIST: 'zulu'

jobs:
  checks:
    name: Run checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Enable execution
        run: chmod +x ./gradlew

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JDK_DIST }}

      - name: Check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check

      - name: Upload reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: check-reports
          path: ./*/build/reports
          if-no-files-found: warn

      - name: Publish test reports
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "**/build/test-results/*/TEST-*.xml"

  deploy-docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    if: github.repository == 'jonapoul/alakazam' && github.ref == 'refs/heads/master'
    needs: [ checks ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: 'true'

      - name: Enable execution
        run: |
          chmod +x ./gradlew
          chmod +x ./*.sh

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JDK_DIST }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Deploy Docs
        run: |
          git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com'
          pip3 install --upgrade pip && pip3 install mkdocs-material mkdocs-material-extensions mkdocs-minify-plugin
          ./deploy_docs.sh
